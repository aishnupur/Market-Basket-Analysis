mat1 <- matrix(data = c(0,1/2,0,1/2,0,0,0,0,1,0,0,0,1/2,0,0,0,1/2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0), nrow = 6, ncol = 6)
View(mat1)
tel1 = 0.1
tel2 = 0.2
tel3 = 0.4
mat2 <- matrix(data = c(1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6), nrow = 6, ncol = 6)
current_rank <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag <- FALSE
k = 0
while (flag==FALSE) {
m=0
new_rank <- mat1 %*% current_rank
difference <- new_rank - current_rank
current_rank <- new_rank
for (i in 1:6) {
if(difference[i,1] > 0.001 || difference[i,1]< -0.001)
{
m = m+1
}
if(m>0)
{
flag = FALSE
}
else
{
flag = TRUE
}
}
k= k+1
}
print(k)
mat3 = 0.1 * mat1 + 0.9 * mat2
current_rank2 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag2 <- FALSE
k2 = 0
while (flag2==FALSE) {
m2=0
new_rank2 <- mat3 %*% current_rank2
difference2 <- new_rank2 - current_rank2
current_rank2 <- new_rank2
for (i in 1:6) {
if(difference2[i,1] > 0.001 || difference2[i,1]< -0.001)
{
m2 = m2+1
}
if(m2>0)
{
flag2 = FALSE
}
else
{
flag2 = TRUE
}
}
k2= k2+1
}
print(k2)
mat4 = 0.2 * mat1 + 0.8 * mat2
current_rank3 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag3 <- FALSE
k3 = 0
while (flag3==FALSE) {
m3=0
new_rank3 <- mat4 %*% current_rank3
difference3 <- new_rank3 - current_rank3
current_rank3 <- new_rank3
for (i in 1:6) {
if(difference3[i,1] > 0.001 || difference3[i,1]< -0.001)
{
m3 = m3+1
}
if(m3>0)
{
flag3 = FALSE
}
else
{
flag3 = TRUE
}
}
k3= k3+1
}
print(k3)
mat5 = 0.4 * mat1 + 0.6 * mat2
current_rank4 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag4 <- FALSE
k4 = 0
while (flag4==FALSE) {
m4=0
new_rank4 <- mat5 %*% current_rank4
difference4 <- new_rank4 - current_rank4
current_rank4 <- new_rank4
for (i in 1:6) {
if(difference4[i,1] > 0.001 || difference4[i,1]< -0.001)
{
m4 = m4+1
}
if(m4>0)
{
flag4 = FALSE
}
else
{
flag4 = TRUE
}
}
k4= k4+1
}
print(k4)
setwd("C:/Users/golak/OneDrive/Desktop/College ML assignments/Market-Basket-Analysis")
#install.packages('arules')
library(arules)
dataset1 <- read.csv('train.csv')
dataset2 <- data.frame(dataset1$VisitNumber, dataset1$Upc)
names(dataset2) <- c("transaction", "product")
dataset3 <- aggregate(dataset2$product ~ dataset2$transaction, dataset2, c)
names(dataset3) <- c("transaction", "products")
dataset4 <- data.frame(dataset3$products)
names(dataset4) <- c("product")
View(dataset3)
View(dataset2)
dataset4 <- data.frame(dataset3$products, dataset3, c)
names(dataset4) <- c("product")
dataset4 <- data.frame(dataset3$products)
names(dataset4) <- c("products")
View(dataset3)
dataset4 <- data.frame(dataset2$product)
View(dataset2)
library(plyr)
ordered_data <- ddply(dataset2,c("transaction"),
function(df1)paste(df1$product,collapse = ","))
View(ordered_data)
write.csv(ordered_data,"ordered_data.csv",quote = FALSE,row.names = TRUE)
txn = read.transactions(file = "ordered_data.csv",rm.duplicates = TRUE,format = "basket",sep = ",",cols=1)
View(txn)
basket_rules <- apriori(txn,parameter = list(sup = 0.0,conf = 0.5,target = "rules"))
basket_rules <- apriori(txn,parameter = list(sup = 0.3,conf = 0.5,target = "rules"))
inspect(basket_rules)
View(basket_rules)
inspect(sort(basket_rules,by='lift')[1:20])
inspect(sort(basket_rules,by='lift')[1:5])
inspect(sort(basket_rules,by='lift')[0:5])
inspect(sort(basket_rules,by='lift'))
summary(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.1,conf = 0.5,target = "rules"))
summary(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.1,conf = 0.3,target = "rules"))
summary(basket_rules)
View(txn)
basket_rules <- apriori(txn,parameter = list(sup = 0.5,conf = 0.5,target = "rules"))
summary(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0045,conf = 0.2,target = "rules"))
summary(basket_rules)
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0002,conf = 0.2,target = "rules"))
inspect(basket_rules)
inspect(sort(basket_rules,by='lift')[1:20])
inspect(sort(basket_rules,by='lift')[1:100])
basket_rules <- apriori(txn,parameter = list(sup = 0.0002,conf = 0.5,target = "rules"))
inspect(sort(basket_rules,by='lift')[1:100])
View(ordered_data)
basket_rules <- apriori(txn,parameter = list(sup = 0.00045,conf = 0.5,target = "rules"))
basket_rules <- apriori(txn,parameter = list(sup = 0.0005,conf = 0.5,target = "rules"))
basket_rules <- apriori(txn,parameter = list(sup = 0.005,conf = 0.5,target = "rules"))
inspect(basket_rules)
inspect(sort(basket_rules,by='lift')[1:100])
summary(basket_rules)
