mat1 <- matrix(data = c(0,1/2,0,1/2,0,0,0,0,1,0,0,0,1/2,0,0,0,1/2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0), nrow = 6, ncol = 6)
View(mat1)
tel1 = 0.1
tel2 = 0.2
tel3 = 0.4
mat2 <- matrix(data = c(1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6,1/6), nrow = 6, ncol = 6)
current_rank <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag <- FALSE
k = 0
while (flag==FALSE) {
m=0
new_rank <- mat1 %*% current_rank
difference <- new_rank - current_rank
current_rank <- new_rank
for (i in 1:6) {
if(difference[i,1] > 0.001 || difference[i,1]< -0.001)
{
m = m+1
}
if(m>0)
{
flag = FALSE
}
else
{
flag = TRUE
}
}
k= k+1
}
print(k)
mat3 = 0.1 * mat1 + 0.9 * mat2
current_rank2 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag2 <- FALSE
k2 = 0
while (flag2==FALSE) {
m2=0
new_rank2 <- mat3 %*% current_rank2
difference2 <- new_rank2 - current_rank2
current_rank2 <- new_rank2
for (i in 1:6) {
if(difference2[i,1] > 0.001 || difference2[i,1]< -0.001)
{
m2 = m2+1
}
if(m2>0)
{
flag2 = FALSE
}
else
{
flag2 = TRUE
}
}
k2= k2+1
}
print(k2)
mat4 = 0.2 * mat1 + 0.8 * mat2
current_rank3 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag3 <- FALSE
k3 = 0
while (flag3==FALSE) {
m3=0
new_rank3 <- mat4 %*% current_rank3
difference3 <- new_rank3 - current_rank3
current_rank3 <- new_rank3
for (i in 1:6) {
if(difference3[i,1] > 0.001 || difference3[i,1]< -0.001)
{
m3 = m3+1
}
if(m3>0)
{
flag3 = FALSE
}
else
{
flag3 = TRUE
}
}
k3= k3+1
}
print(k3)
mat5 = 0.4 * mat1 + 0.6 * mat2
current_rank4 <- matrix(data = c(1,1,1,1,1,1),nrow = 6,ncol = 1)
flag4 <- FALSE
k4 = 0
while (flag4==FALSE) {
m4=0
new_rank4 <- mat5 %*% current_rank4
difference4 <- new_rank4 - current_rank4
current_rank4 <- new_rank4
for (i in 1:6) {
if(difference4[i,1] > 0.001 || difference4[i,1]< -0.001)
{
m4 = m4+1
}
if(m4>0)
{
flag4 = FALSE
}
else
{
flag4 = TRUE
}
}
k4= k4+1
}
print(k4)
install.packages("arulesCBA")
library("arulesCBA", lib.loc="~/R/win-library/3.5")
setwd("C:/Users/golak/OneDrive/Desktop/College ML assignments/Market-Basket-Analysis")
#install.packages('arules')
library(arules)
dataset1 <- read.csv('train.csv')
dataset2 <- data.frame(dataset1$VisitNumber, dataset1$Upc)
names(dataset2) <- c("transaction", "product")
library(plyr)
ordered_data <- ddply(dataset2,c("transaction"),
function(df1)paste(df1$product,collapse = ","))
write.csv(ordered_data,"ordered_data.csv",quote = FALSE,row.names = TRUE)
txn = read.transactions(file = "ordered_data.csv",rm.duplicates = TRUE,format = "basket",sep = ",",cols=1)
basket_rules <- apriori(txn,parameter = list(sup = 0.0006,conf = 0.5,target = "rules"))
inspect(basket_rules)
inspect(sort(basket_rules,by='lift')[1:100])
summary(basket_rules)
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
classificator_strong <- CBA(
train_data$TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
View(train_data)
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
classificator_strong <- CBA(
TripType ~ ., data = as.data.frame(train_data), supp = 0.0006, conf=0.5, verbose = FALSE
)
library("dplyr", lib.loc="~/R/win-library/3.5")
classificator_strong <- CBA(
TripType ~ ., data = dplyr::tbl_df(train_data), supp = 0.0006, conf=0.5, verbose = FALSE
)
train_data <- as.data.frame(train_data)
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
train_data <- sapply(train_data$TripType,is.factor)
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
train_data$TripType <- as.factor(train_data$TripType)
classificator_strong <- CBA(
TripType ~ ., data = train_data, supp = 0.0006, conf=0.5, verbose = FALSE
)
half_train <- train_data[1:5000,]
View(half_train)
classificator_strong <- CBA(
TripType ~ ., data = half_train, supp = 0.0006, conf=0.5, verbose = FALSE
)
half_test <- test_data[1:5000,]
half_test <- train_data[5001:8000,-"TripType"]
half_test <- train_data[5001:8000,-TripType]
half_test <- train_data[5001:8000,2:7]
View(half_test)
predicted_strong <- predict(classificator_strong, half_test)
cross_tab_strong<- table(predicted = predicted_strong, true = train_data[5001:8000,]$TripType)
accuracy_strong <- (cross_tab_strong[1,1]+cross_tab_strong[2,2])/sum(cross_tab_strong)
predicted_strong
predicted_strong.unique()
half_train['TripType'].unique()
unique(half_train['TripType'])
unique(half_train['TripType']).length()
length(unique(half_train['TripType']))
nrow(unique(half_train['TripType']))
nrow(unique(half_train[5001:8000,'TripType']))
nrow(unique(half_train[5001:8000,1]))
nrow(unique(half_train[5001:8000,]['TripType']))
half_train2 <- train_data[5001:8000,]
nrow(unique(half_train2['TripType']))
View(half_test)
#install.packages('arules')
library(arules)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
half_train <- train_data[1:5000,]
half_train2 <- train_data[5001:8000,]
half_test <- train_data[5001:8000,2:7]
count(half_train,vars='TripType')
count(half_train, "TripType")
count(half_train,c("TripType"))
prop.table(table(half_train$TripType))
table(half_train$TripType)
table(half_train2$TripType)
